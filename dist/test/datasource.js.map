{"version":3,"sources":["../../src/datasource.js"],"names":["PNPDatasource","instanceSettings","$q","backendSrv","templateSrv","type","url","name","q","withCredentials","basicAuth","DEFAULT_HOST","DEFAULT_SERVICE","DEFAULT_PERFLABEL","id","options","query","buildQueryParameters","targets","filter","t","hide","host","service","perflabel","length","when","data","start","Number","range","from","toDate","getTime","toFixed","end","to","x","target","_fixup_regex","This","requestOptions","_requestOptions","method","headers","datasourceRequest","then","result","dataQueryMapper","k","res","alias","scopedVars","tag_host","value","tag_service","tag_perflabel","tag_label","replace","datapoints","y","pop","fill","undefined","factor","eval","NaN","push","matches","match","values","split","join","response","status","message","title","catch","err","statusText","query_string","shift","toLowerCase","Error","op","val","metricFindData","prependVariables","mapper","mapToTextValueHost","mapToTextValueService","mapToTextValuePerflabel","variables","unshift","text","_","map","hosts","d","i","services","servicedesc","labels","label","refId","Authorization"],"mappings":"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","file":"datasource.js","sourcesContent":["import _ from \"lodash\";\n\nexport class PNPDatasource {\n\n  constructor(instanceSettings, $q, backendSrv, templateSrv) {\n    this.type = instanceSettings.type;\n    this.url = instanceSettings.url;\n    this.name = instanceSettings.name;\n    this.q = $q;\n    this.backendSrv = backendSrv;\n    this.templateSrv = templateSrv;\n    this.withCredentials = instanceSettings.withCredentials;\n    this.basicAuth = instanceSettings.basicAuth;\n\n    this.DEFAULT_HOST = \"select host\";\n    this.DEFAULT_SERVICE = \"select service\";\n    this.DEFAULT_PERFLABEL = \"select performance label\";\n\n    this.name = instanceSettings.name;\n    this.id = instanceSettings.id;\n  }\n\n  /* fetch pnp rrd data */\n  query(options) {\n    var query = this.buildQueryParameters(options);\n    query.targets = query.targets.filter(t => !t.hide);\n    query.targets = query.targets.filter(t => t.host);      /* hide querys without a host filter */\n    query.targets = query.targets.filter(t => t.service);   /* hide querys without a service filter */\n    query.targets = query.targets.filter(t => t.perflabel); /* hide querys without a perflabel filter */\n\n    if(query.targets.length <= 0) {\n      return this.q.when({data: []});\n    }\n\n    query.start = Number(options.range.from.toDate().getTime() / 1000).toFixed();\n    query.end   = Number(options.range.to.toDate().getTime() / 1000).toFixed();\n\n    /* fixup regex syntax in query targets */\n    for(var x=0; x<query.targets.length; x++) {\n      var target = query.targets[x];\n      if(target.host      == this.DEFAULT_HOST)      { target.host      = '' }\n      if(target.service   == this.DEFAULT_SERVICE)   { target.service   = '' }\n      if(target.perflabel == this.DEFAULT_PERFLABEL) { target.perflabel = '' }\n\n      target.host      = this._fixup_regex(target.host);\n      target.service   = this._fixup_regex(target.service);\n      target.perflabel = this._fixup_regex(target.perflabel);\n    }\n\n    var This = this;\n    var requestOptions = this._requestOptions({\n      url: this.url + '/index.php/api/metrics',\n      data: query,\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' }\n    });\n    return this.backendSrv.datasourceRequest(requestOptions)\n                          .then(function(result) {\n                            return(This.dataQueryMapper(result, options))\n                          });\n  }\n\n  /* maps the result data from pnp into grafana data format */\n  dataQueryMapper(result, options) {\n    var data = {data:[]};\n    if(!result || !result.data || !result.data.targets) {\n        return(data);\n    }\n    for(var x=0; x < result.data.targets.length; x++) {\n      for(var k=0; k < result.data.targets[x].length; k++) {\n        var target = options.targets[x];\n        var res    = result.data.targets[x][k];\n        var alias = target.perflabel;\n        if(target.alias) {\n          alias = target.alias;\n          var scopedVars = {\n            tag_host      : {value: res.host},\n            tag_service   : {value: res.service},\n            tag_perflabel : {value: res.perflabel},\n            tag_label     : {value: res.perflabel}\n          };\n          alias = this.templateSrv.replace(alias, scopedVars);\n        }\n        var datapoints = res.datapoints;\n        var length     = datapoints.length;\n        // remove the last few \"null\" values from the series because the last value is quite often null\n        // and would break current value in legend tables\n        for(var y=1; y < 5; y++) {\n          if(length > y && datapoints[length-y][0] === null) {\n            datapoints.pop();\n          } else {\n            break;\n          }\n        }\n        var length = datapoints.length;\n        var fill   = options.targets[x].fill;\n        if(fill != \"fill\") {\n          if(fill == \"zero\") { fill = 0; }\n          if(fill == \"gap\")  { fill = undefined; }\n          for(var y=0; y<length; y++) {\n            if(datapoints[y][0] === null) {\n              datapoints[y][0] = fill;\n            }\n          }\n        }\n        if(options.targets[x].factor && options.targets[x].factor != \"\") {\n          var factor = eval(options.targets[x].factor);\n          if(factor != NaN && factor != 1) {\n            for(var y=0; y<length; y++) {\n              if(datapoints[y][0] !== null) {\n                datapoints[y][0] *= factor;\n              }\n            }\n          }\n        }\n        data.data.push({\n          \"target\": alias,\n          \"datapoints\": datapoints\n        });\n      }\n    }\n    return(data);\n  }\n\n  /* convert list selection into regular expression\n   * in:  /^{a,b,c}$/\n   * out: /^(a|b|c)$/\n   */\n  _fixup_regex(value) {\n    if(value == undefined || value == null) {\n      return value;\n    }\n    var matches = value.match(/^\\/?\\^?\\{(.*)\\}\\$?\\/?$/);\n    if(!matches) { return(value); }\n    var values = matches[1].split(/,/);\n    for(var x = 0; x < values.length; x++) {\n      values[x] = values[x].replace(/\\//, '\\\\/');\n    }\n    return('/^('+values.join('|')+')$/');\n  }\n\n  testDatasource() {\n    var requestOptions = this._requestOptions({\n      url: this.url + '/index.php/api',\n      method: 'GET'\n    });\n    return this.backendSrv.datasourceRequest(requestOptions)\n      .then(response => {\n        if (response.status === 200) {\n          return { status: \"success\", message: \"Data source is working\", title: \"Success\" };\n        }\n      })\n      .catch(err => {\n        if(err.status && err.status >= 400) {\n          return { status: 'error', message: 'Data source not connected: '+err.status+' '+err.statusText };\n        }\n        return { status: 'error', message: err.message };\n      });\n  }\n\n  /* called from the dashboard templating engine to fill template variables\n   * parses simple statements into proper data requests\n   * query syntax: <type> [where <expr>]\n   * ex.: host\n   * ex.: service where host = localhost\n   * ex.: label where host = localhost and service = ping\n   */\n  metricFindQuery(query_string) {\n    var This = this;\n    var type;\n    var options = {};\n    var query = query_string.split(/\\s+/);\n    if(query[0]) {\n      type = query.shift().replace(/s$/, \"\");\n    }\n    // parse simple where statements\n    if(query[0] != undefined) {\n      if(query[0].toLowerCase() != \"where\") {\n        throw new Error(\"query syntax error, expecting WHERE\");\n      }\n      query.shift();\n\n      while(query.length >= 3) {\n        var t   = query.shift().toLowerCase();\n        var op  = query.shift().toLowerCase();\n        var val = query.shift();\n        if(op != \"=\") {\n          throw new Error(\"query syntax error, operator must be '='\");\n        }\n        options[t] = val;\n\n        if(query[0] != undefined) {\n          if(query[0].toLowerCase() == 'and') {\n            query.shift();\n          } else {\n            throw new Error(\"query syntax error, expecting AND\");\n          }\n        }\n      }\n\n      // still remaining filters?\n      if(query.length > 0) {\n        throw new Error(\"query syntax error\");\n      }\n    }\n    return(This.metricFindData(type, options, false));\n  }\n\n  /* used from the query editor to get lists of objects of given type */\n  metricFindData(type, options, prependVariables) {\n    var This = this;\n    var mapper;\n    var url;\n    var data = {};\n    if(type == \"host\") {\n      url          = This.url + '/index.php/api/hosts';\n      mapper       = This.mapToTextValueHost;\n    }\n    else if(type == \"service\") {\n      url          = This.url + '/index.php/api/services/';\n      data.host    = This._fixup_regex(This.templateSrv.replace(options.host));\n      mapper       = This.mapToTextValueService;\n      if(!data.host) { data.host = '/.*/'; }\n    }\n    else if(type == \"perflabel\" || type == \"label\") {\n      url          = This.url + '/index.php/api/labels/';\n      data.host    = This._fixup_regex(This.templateSrv.replace(options.host));\n      data.service = This._fixup_regex(This.templateSrv.replace(options.service));\n      mapper       = This.mapToTextValuePerflabel;\n      if(!data.host)    { data.host    = '/.*/'; }\n      if(!data.service) { data.service = '/.*/'; }\n    }\n\n    if(url == undefined) {\n      throw new Error(\"query syntax error, got no url, unknown type: \"+type);\n    }\n\n    var requestOptions = This._requestOptions({\n      url:     url,\n      data:    data,\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' }\n    });\n    return This.backendSrv.datasourceRequest(requestOptions)\n      .then(mapper)\n      .then(function(data) {\n        /* prepend templating variables */\n        if(prependVariables) {\n          for(var x=0; x<This.templateSrv.variables.length; x++) {\n            data.unshift({ text:  '/^$'+This.templateSrv.variables[x].name+'$/',\n                           value: '/^$'+This.templateSrv.variables[x].name+'$/' });\n          }\n        }\n        return(data);\n      });\n  }\n\n  mapToTextValueHost(result) {\n    return _.map(result.data.hosts, (d, i) => {\n      return { text: d.name, value: d.name };\n    });\n  }\n\n  mapToTextValueService(result) {\n    return _.map(result.data.services, (d, i) => {\n      return { text: (d.servicedesc || d.name), value: d.name };\n    });\n  }\n\n  mapToTextValuePerflabel(result) {\n    return _.map(result.data.labels, (d, i) => {\n      return { text: (d.label || d.name), value: (d.label || d.name) };\n    });\n  }\n\n  buildQueryParameters(options) {\n    //remove placeholder targets\n    options.targets = _.filter(options.targets, target => {\n      return target.host !== this.DEFAULT_HOST;\n    });\n    options.targets = _.filter(options.targets, target => {\n      return target.service !== this.DEFAULT_SERVICE;\n    });\n    options.targets = _.filter(options.targets, target => {\n      return target.perflabel !== this.DEFAULT_PERFLABEL;\n    });\n    var targets = _.map(options.targets, target => {\n      return {\n        host: this.templateSrv.replace(this.templateSrv.replace(target.host, options.scopedVars)),\n        service: this.templateSrv.replace(this.templateSrv.replace(target.service, options.scopedVars)),\n        perflabel: this.templateSrv.replace(this.templateSrv.replace(target.perflabel, options.scopedVars)),\n        alias: this.templateSrv.replace(this.templateSrv.replace(target.alias, options.scopedVars)),\n        type: this.templateSrv.replace(this.templateSrv.replace(target.type, options.scopedVars)),\n        fill: this.templateSrv.replace(this.templateSrv.replace(target.fill, options.scopedVars)),\n        factor: this.templateSrv.replace(this.templateSrv.replace(target.factor, options.scopedVars)),\n        refId: target.refId,\n        hide: target.hide\n      };\n    });\n\n    options.targets = targets;\n\n    return options;\n  }\n\n  _requestOptions(options) {\n    options = options || {};\n    options.headers = options.headers || {};\n    if(this.basicAuth || this.withCredentials) {\n      options.withCredentials = true;\n    }\n    if(this.basicAuth) {\n      options.headers.Authorization = this.basicAuth;\n    }\n    return(options);\n  }\n}\n"]}